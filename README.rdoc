= rack-fb 

Rack-fb is currently a work in progress.  It aims to be a lightweight client for the [Facebook API](http://wiki.developers.facebook.com/index.php/API).
It is mostly based on MiniFB (http://github.com/appoxy/mini_fb) and includes some features inspired by rack-facebook (http://github.com/carlosparamio/rack-facebook).
Otherwise, it tries to emulate the official Facebook PHP library.

== Installation

    gem install rack-fb

== General Usage

    require 'rack/fb'

    use Rack::Facebook, :secret => "SECRET", :api_key => "APIKEY"

The Facebook parameters in the request are stored if the request is valid:
  * the signature is calculated - http://wiki.developers.facebook.com/index.php/Verifying_The_Signature

    env['facebook.params']

The most general case is to use call method:
    fb_client = env['facebook.client']

    user_hash = fb_client.call("Users.getInfo", "session_key"=>@session_key, "uids"=>@uid, "fields"=>User.all_fields)

Which simply returns the parsed json response from Facebook.

== Some Higher Level Objects for Common Uses

Get a MiniFB::Session:

    @fb = MiniFB::Session.new(FB_API_KEY, FB_SECRET, @fb_session, @fb_uid)

This Rack middleware checks the signature of Facebook params, and
converts them to Ruby objects when appropiate. Also, it converts
the request method from the Facebook POST to the original HTTP
method used by the client.

If the signature is wrong, it returns a "400 Invalid Facebook Signature".

Optionally, it can take a block that receives the Rack environment
and returns a value that evaluates to true when we want the middleware to
be executed for the specific request.

# Usage

In your config.ru:

    require 'rack/facebook'
    use Rack::Facebook, "my_facebook_secret_key"

Using a block condition:

    use Rack::Facebook, "my_facebook_secret_key" do |env|
      env['REQUEST_URI'] =~ /^\/facebook_only/
    end
